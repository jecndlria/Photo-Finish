name: Deploy Lambda

on:
  push:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: |
          pwd
          ls -la

  configure_dep:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          python -m pip install --upgrade pip
          sudo apt-get install awscli
      - run: |
          pwd
          ls -la

  update_lambda_test:
    runs-on: ubuntu-latest
    needs: [checkout, configure_dep]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Create test zip file 
        run: |
          cd src/lambda/test
          zip -r test.zip .
      - name: Update test function
        run: |
          aws lambda update-function-code \
          --function-name test \
          --zip-file fileb://src/lambda/test/test.zip


  update_lambda_getS3Object:
    runs-on: ubuntu-latest
    needs: [checkout, configure_dep]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Create getS3Object zip file 
        run: |
          cd src/lambda/getS3Object
          zip -r getS3Object.zip .
      - name: Update getS3Object function
        run: |
          aws lambda update-function-code \
          --function-name getS3Object \
          --zip-file fileb://src/lambda/getS3Object/getS3Object.zip

  update_lambda_cognitotest:
    runs-on: ubuntu-latest
    needs: [checkout, configure_dep]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Create getS3Object zip file 
        run: |
          cd src/lambda/cognitotest
          zip -r cognitotest.zip .
      - name: Update cognitotest function
        run: |
          aws lambda update-function-code \
          --function-name cognitotest \
          --zip-file fileb://src/lambda/cognitotest/cognitotest.zip

  update_lambda_create_account:
    runs-on: ubuntu-latest
    needs: [checkout, configure_dep]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Create create_account zip file 
        run: |
          cd src/lambda/create_account
          zip -r create_account.zip .
      - name: Update cognitotest function
        run: |
          aws lambda update-function-code \
          --function-name create_account \
          --zip-file fileb://src/lambda/create_account/create_account.zip

  update_lambda_rekognition_image_analysis:
    runs-on: ubuntu-latest
    needs: [checkout, configure_dep]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Create rekognition_image_analysis zip file
        run: |
          cd src/lambda/rekognition_image_analysis
          zip -r rekognition_image_analysis.zip . 
      - name: Update rekognition_image_analysis function
        run: |
          aws lambda update-function-code \
          --function-name rekognition_image_analysis \
          --zip-file fileb://src/lambda/rekognition_image_analysis/rekognition_image_analysis.zip

  update_lambda_generate_prompt:
    runs-on: ubuntu-latest
    needs: [checkout, configure_dep]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Substitute secrets in password.py
        run: |
          sed -i "s/rds_host = \"secret\"/rds_host = \"${{ secrets.RDS_HOST }}\"/g" src/lambda/create_account/password.py
          sed -i "s/db_username = \"secret\"/db_username = \"${{ secrets.DB_USERNAME }}\"/g" src/lambda/create_account/password.py
          sed -i "s/db_password = \"secret\"/db_password = \"${{ secrets.DB_PASSWORD }}\"/g" src/lambda/create_account/password.py
          sed -i "s/db_name = \"secret\"/db_name = \"${{ secrets.DB_NAME }}\"/g" src/lambda/create_account/password.py
          sed -i "s/userpool = \"secret\"/userpool = \"${{ secrets.USERPOOL }}\"/g" src/lambda/create_account/password.py
      - name: Create generate_prompt zip file
        run: |
          cd src/lambda/generate_prompt
          zip -r generate_prompt .
      - name: Update generate_prompt function
        run: |
          aws lambda update-function-code \
          --function-name generate_prompt \
          --zip-file fileb://src/lambda/generate_prompt/generate_prompt.zip \
          --publish

  update_lambda_login:
    runs-on: ubuntu-latest
    needs: [checkout, configure_dep]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Create login zip file 
        run: |
          cd src/lambda/login
          zip -r login.zip .
      - name: Update login function
        run: |
          aws lambda update-function-code \
          --function-name login \
          --zip-file fileb://src/lambda/login/login.zip

  update_lambda_get_leaderboard: 
    runs-on: ubuntu-latest
    needs: [checkout, configure_dep]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Create get_leaderboard zip file 
        run: |
          cd src/lambda/get_leaderboard 
          zip -r get_leaderboard.zip . 
      - name: Update get_leaderboard function 
        run: |
          aws lambda update-function-code \
          --function-name get_leaderboard \ 
          --zip-file fileb://src/lambda/get_leaderboard/get_leaderboard.zip \ 
